version: '3.9'

services:
  database_project:
    container_name: project_database_container
    image: postgres:15
    hostname: ${DB_HOST}
    command: -p ${DB_PORT}
    restart: on-failure
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - main_network
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./data/project/postgres:/var/lib/postgresql/data

  rabbitmq_project:
    container_name: ${RABBITMQ_HOST}
    image: rabbitmq:latest
    networks:
      - main_network
    ports:
      - ${RABBITMQ_PORT}:5672
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: django_project_celery_worker
    command: "celery -A config worker -l INFO"
    volumes:
      - .:/qanda_container
    depends_on:
      - qanda
      - rabbitmq_project
      - database_project
    environment:
      - BROKER_URL=${RABBITMQ_CONNECTION}
      - RESULT_BACKEND=rpc://
      - C_FORCE_ROOT=true
    networks:
      - main_network
    restart: always

  qanda:
    build: .
    hostname: qanda
    container_name: qanda_container
    restart: on-failure
    command: sh -c "python3 manage.py makemigrations &&
                    python3 manage.py migrate --no-input &&
                    python3 manage.py collectstatic --no-input &&
                    gunicorn -k gevent --chdir config config.wsgi:application -b 0.0.0.0:8000"
    depends_on:
      - database_project
    expose:
      - "8000"
    networks:
      - main_network
    volumes:
      - .:/qanda/
      - ./static:/qanda/static
      - ./media:/qanda/media

  nginx_project:
    image: nginx:latest
    hostname: nginx_project
    container_name: nginx_project_container
    command: nginx -g 'daemon off;'
    restart: on-failure
    depends_on:
      - qanda
    networks:
      - main_network
    expose:
      - "80"
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/qanda/static
      - ./media:/qanda/media

networks:
  main_network:


volumes:
  static:
  data:
